name: Build Windows EXE

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Clean old build
      run: |
        if exist build rmdir /s /q build
        if exist dist rmdir /s /q dist
      continue-on-error: true
    
    - name: Build executable
      run: |
        python -m PyInstaller --clean telegram_monitor.spec
    
    - name: List dist contents
      run: |
        ls -la dist/
        file dist/TelegramMonitor.exe
    
    - name: Upload executable as release asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/TelegramMonitor.exe
        tag_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: TelegramMonitor-Windows
        path: dist/TelegramMonitor.exe

