name: Build Windows EXE

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Clean old build
      shell: cmd
      run: |
        if exist build rmdir /s /q build
        if exist dist rmdir /s /q dist
      continue-on-error: true
    
    - name: Build executable
      shell: cmd
      run: |
        python -m PyInstaller --clean telegram_monitor.spec
    
    - name: Find executable and set output
      id: find_exe
      shell: cmd
      run: |
        echo Searching for executable...
        dir dist
        if exist "dist\TelegramMonitor.exe" (
          echo path=dist\TelegramMonitor.exe > %GITHUB_OUTPUT%
          echo Found standalone EXE
        ) else if exist "dist\TelegramMonitor\TelegramMonitor.exe" (
          echo path=dist\TelegramMonitor\TelegramMonitor.exe > %GITHUB_OUTPUT%
          echo Found in folder
          dir dist\TelegramMonitor
        ) else (
          echo EXE not found
          dir dist /s
          exit 1
        )
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: TelegramMonitor-Windows
        path: ${{ steps.find_exe.outputs.path }}
        retention-days: 7
    
    - name: Display download info
      run: |
        echo "‚úÖ Build successful!"
        echo ""
        echo "üì¶ Download EXE file:"
        echo "1. Go to: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo "2. Scroll down to 'Artifacts'"
        echo "3. Download 'TelegramMonitor-Windows.zip'"
        echo "4. Extract the ZIP file"
        echo ""
        echo "üìù To create a Release with EXE:"
        echo "1. Go to: https://github.com/${{ github.repository }}/releases/new"
        echo "2. Tag: ${{ github.ref_name }}"
        echo "3. Title: Release ${{ github.ref_name }}"
        echo "4. Upload EXE from the Artifacts"
